/*
 * Decompiled with CFR 0.152.
 * 
 * Could not load the following classes:
 *  net.minecraft.network.play.server.SPacketChat
 *  net.minecraft.network.play.server.SPacketParticles
 *  net.minecraft.network.play.server.SPacketSoundEffect
 */
package me.chachoox.lithium.impl.managers.minecraft.exploit;

import java.util.stream.Stream;
import me.chachoox.lithium.api.event.bus.Listener;
import me.chachoox.lithium.api.event.bus.SubscriberImpl;
import me.chachoox.lithium.api.interfaces.Minecraftable;
import me.chachoox.lithium.api.util.logger.Logger;
import me.chachoox.lithium.impl.event.events.network.PacketEvent;
import net.minecraft.network.play.server.SPacketChat;
import net.minecraft.network.play.server.SPacketParticles;
import net.minecraft.network.play.server.SPacketSoundEffect;

public class CrashManager
extends SubscriberImpl
implements Minecraftable {
    public CrashManager() {
        this.listeners.add(new Listener<PacketEvent.Receive<SPacketChat>>(PacketEvent.Receive.class, Integer.MAX_VALUE, SPacketChat.class){

            @Override
            public void call(PacketEvent.Receive<SPacketChat> event) {
                SPacketChat packet = (SPacketChat)event.getPacket();
                if (Stream.of("${", "$<", "$:-", "jndi:ldap", "$(").anyMatch(s -> packet.getChatComponent().getUnformattedText().contains((CharSequence)s))) {
                    Logger.getLogger().log("\u00a7c(Potential) Log4J exploit detected");
                    event.setCanceled(true);
                }
            }
        });
        this.listeners.add(new Listener<PacketEvent.Receive<SPacketParticles>>(PacketEvent.Receive.class, Integer.MAX_VALUE, SPacketParticles.class){

            @Override
            public void call(PacketEvent.Receive<SPacketParticles> event) {
                if (((SPacketParticles)event.getPacket()).getParticleCount() > 1000) {
                    Logger.getLogger().log("\u00a7cPotential Particle Crash detected");
                    event.setCanceled(true);
                }
            }
        });
        this.listeners.add(new Listener<PacketEvent.Receive<SPacketSoundEffect>>(PacketEvent.Receive.class, Integer.MAX_VALUE, SPacketSoundEffect.class){

            @Override
            public void call(PacketEvent.Receive<SPacketSoundEffect> event) {
                if (((SPacketSoundEffect)event.getPacket()).getPitch() > 1000.0f || ((SPacketSoundEffect)event.getPacket()).getVolume() > 1000.0f) {
                    Logger.getLogger().log("\u00a7cPotential Sound Crash detected");
                    event.setCanceled(true);
                }
            }
        });
    }
}

